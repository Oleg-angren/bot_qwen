import os
import asyncio
from aiogram import Bot, Dispatcher, types
from flask import Flask, request

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # –ù–∞–ø—Ä–∏–º–µ—Ä: https://your-bot.onrender.com
PORT = int(os.getenv("PORT", 10000))

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è ===
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

app = Flask(__name__)

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ===
@dp.message(Command("start"))
async def cmd_start(message: types.Message):
    await message.answer("üöÄ –ü—Ä–∏–≤–µ—Ç! –Ø —Ä–∞–±–æ—Ç–∞—é —á–µ—Ä–µ–∑ webhook.")

@dp.message(Command("help"))
async def cmd_help(message: types.Message):
    await message.answer("–Ø ‚Äî —ç—Ö–æ-–±–æ—Ç. –í—Å—ë, —á—Ç–æ —Ç—ã –ø–∏—à–µ—à—å, —è –ø–æ–≤—Ç–æ—Ä—è—é.")

# === –≠—Ö–æ-–æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ===
@dp.message()
async def echo_message(message: types.Message):
    if message.text:
        await message.answer(f"üí¨ –¢—ã –Ω–∞–ø–∏—Å–∞–ª: {message.text}")

# === Webhook endpoint (Telegram –±—É–¥–µ—Ç —Å–ª–∞—Ç—å —Å—é–¥–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è) ===
@app.route(f'/{BOT_TOKEN}', methods=['POST'])
async def webhook():
    update = types.Update(**request.get_json())
    await dp.feed_update(bot, update)
    return {'status': 'ok'}

# === –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–¥–ª—è UptimeRobot –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏) ===
@app.route('/')
def home():
    return "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä!"

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ ===
async def on_startup():
    webhook_url = f"{WEBHOOK_URL}/{BOT_TOKEN}"
    await bot.set_webhook(webhook_url)
    print(f"üü¢ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_url}")

# === –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ===
def run():
    asyncio.run(on_startup())
    app.run(host='0.0.0.0', port=PORT)

if __name__ == '__main__':
    run()
